"""
Django settings for dj_chat project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path

# 项目根目录配置
# BASE_DIR 是项目的根目录，用于构建其他路径
BASE_DIR = Path(__file__).resolve().parent.parent

# 安全密钥配置
# SECRET_KEY 用于加密会话和其他安全相关功能
# 注意：在生产环境中必须更改此密钥并保密
SECRET_KEY = "django-insecure-h1g!j-40bxhuv#z0%#(=7@)khg8a9jgux7nqaa=#r#omiy1&iu"

# 调试模式配置
# DEBUG=True 时显示详细的错误信息，仅用于开发环境
# 生产环境必须设置为 False
DEBUG = True

# 允许的主机配置
# 指定哪些主机可以访问你的 Django 应用
# '*' 表示允许所有主机，仅用于开发环境
ALLOWED_HOSTS = ['*']

# 已安装的应用配置
# 列出项目中所有启用的 Django 应用
INSTALLED_APPS = [
    'simpleui',  # SimpleUI 管理界面主题
    "django.contrib.admin",  # 管理后台
    "django.contrib.auth",  # 认证系统
    "django.contrib.contenttypes",  # 内容类型框架
    "django.contrib.sessions",  # 会话框架
    "django.contrib.messages",  # 消息框架
    "django.contrib.staticfiles",  # 静态文件管理
    'myapp',  # 你的自定义应用
    'corsheaders',  # 跨域资源共享支持
]

# 中间件配置
# 处理请求和响应的组件，按顺序执行
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",  # 安全中间件
    "django.contrib.sessions.middleware.SessionMiddleware",  # 会话中间件
    'corsheaders.middleware.CorsMiddleware',  # CORS 中间件
    "django.middleware.common.CommonMiddleware",  # 通用中间件
    "django.middleware.csrf.CsrfViewMiddleware",  # CSRF 保护中间件
    "django.contrib.auth.middleware.AuthenticationMiddleware",  # 认证中间件
    "django.contrib.messages.middleware.MessageMiddleware",  # 消息中间件
    "django.middleware.clickjacking.XFrameOptionsMiddleware",  # 点击劫持保护
]

# URL 配置
# 指定根 URL 配置文件
ROOT_URLCONF = "dj_chat.urls"

# 模板配置
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",  # 使用 Django 模板引擎
        "DIRS": [],  # 模板目录列表
        "APP_DIRS": True,  # 是否在已安装的应用中查找模板
        "OPTIONS": {
            "context_processors": [  # 上下文处理器
                "django.template.context_processors.debug",  # 调试信息
                "django.template.context_processors.request",  # 请求对象
                "django.contrib.auth.context_processors.auth",  # 用户认证信息
                "django.contrib.messages.context_processors.messages",  # 消息框架
            ],
        },
    },
]

# WSGI 应用配置
WSGI_APPLICATION = "dj_chat.wsgi.application"

# 数据库配置
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',  # 使用 MySQL 数据库
        'NAME': 'dj_chat',  # 数据库名称
        'USER': 'root',  # 数据库用户名
        'PASSWORD': '321542',  # 数据库密码
        'HOST': 'localhost',  # 数据库主机
        'PORT': '3306',  # 数据库端口
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",  # 启用严格模式
            'charset': 'utf8mb4',  # 使用 UTF8MB4 字符集
        }
    }
}

# 密码验证配置
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",  # 检查密码与用户属性的相似度
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",  # 检查密码最小长度
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",  # 检查是否为常见密码
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",  # 检查是否全为数字
    },
]

# 国际化配置
LANGUAGE_CODE = 'zh-hans'  # 使用简体中文
TIME_ZONE = 'Asia/Shanghai'  # 使用上海时区
USE_I18N = True  # 启用国际化
USE_TZ = True  # 使用时区

# 静态文件配置
STATIC_URL = 'static/'  # 静态文件 URL 前缀
STATIC_ROOT = BASE_DIR / 'static'  # 收集静态文件的目录
STATICFILES_DIRS = [
    BASE_DIR / 'staticfiles',  # 开发环境静态文件目录
    BASE_DIR / '../frontend',  # 新增：让 Django 也能找到 frontend 目录

]

# 媒体文件配置
MEDIA_URL = 'media/'  # 媒体文件 URL 前缀
MEDIA_ROOT = BASE_DIR / 'media'  # 媒体文件存储目录

# 会话配置
SESSION_COOKIE_AGE = 60 * 60 * 24 * 7  # 会话 cookie 有效期（7天）
SESSION_SAVE_EVERY_REQUEST = True  # 每次请求都保存会话

# 跨域配置
CORS_ALLOW_ALL_ORIGINS = True  # 允许所有源访问（开发环境）
CORS_ALLOW_CREDENTIALS = True  # 允许携带认证信息


